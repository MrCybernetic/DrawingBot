#include <Servo.h>

// setup servo
int servoPin = A0;
int PEN_DOWN = 0; // angle of servo when pen is down
int PEN_UP = 80;   // angle of servo when pen is up
Servo penServo;

float wheel_dia=60.0;//51.84
float wheel_base=105.71; //      distance between the 2 wheels//103
int steps_rev=128; //           number of steps per revolution
int delay_time=5; //           time between steps in ms//5//8


// Stepper sequence org->pink->blue->yel
int L_stepper_pins[] = {6, 7, 8, 9};
int R_stepper_pins[] = {2, 3, 4, 5};

int fwd_mask[][4] =  {{0, 0, 0, 1},
                      {0, 0, 1, 1},
                      {0, 0, 1, 0},
                      {0, 1, 1, 0},
                      {0, 1, 0, 0},
                      {1, 1, 0, 0},
                      {1, 0, 0, 0},
                      {1, 0, 0, 1}};

int rev_mask[][4] =  {{1, 0, 0, 0},
                      {1, 1, 0, 0},
                      {0, 1, 0, 0},
                      {0, 1, 1, 0},
                      {0, 0, 1, 0},
                      {0, 0, 1, 1},
                      {0, 0, 0, 1},
                      {1, 0, 0, 1}};


void setup() {
  for(int pin=0; pin<4; pin++){
    pinMode(L_stepper_pins[pin], OUTPUT);
    digitalWrite(L_stepper_pins[pin], LOW);
    pinMode(R_stepper_pins[pin], OUTPUT);
    digitalWrite(R_stepper_pins[pin], LOW);
  }
  penServo.attach(servoPin);
  Serial.println("setup");
  penup();
  delay(1000);
}


void loop(){ 

right(67.13131);
forward(204.59973);
pendown();
right(15.325338);
forward(4.6103563);
left(91.4501);
forward(6.9927573);
left(112.114426);
forward(5.211566);
left(19.020437);
forward(5.897529);
right(55.924126);
forward(4.8906717);
right(55.213356);
forward(6.2525883);
left(32.633312);
forward(6.0205793);
right(81.32403);
forward(8.876494);
right(139.95728);
forward(5.2559037);
left(43.8232);
forward(5.23961);
right(43.95468);
forward(5.1583357);
left(117.55064);
forward(5.9637556);
right(9.550954);
forward(5.253891);
right(62.41409);
forward(6.72939);
left(125.19255);
forward(5.6451125);
left(46.09379);
forward(4.4418135);
right(90.38031);
forward(5.1480827);
left(33.46888);
forward(6.1449413);
right(3.3849742);
forward(7.283946);
left(6.1868577);
forward(7.0799246);
right(1.2425456);
forward(5.7886515);
left(35.234062);
forward(5.2959585);
right(96.67542);
forward(4.513174);
left(70.83561);
forward(6.346112);
left(55.920975);
forward(5.473103);
right(83.02932);
forward(5.363428);
right(57.320305);
forward(6.252162);
left(130.42079);
forward(5.765391);
right(106.84157);
forward(5.171633);
left(124.034195);
forward(6.064221);
left(71.75712);
forward(6.712601);
left(20.261318);
forward(6.1183496);
left(40.965096);
forward(10.306095);
right(145.64864);
forward(6.0978966);
left(50.71592);
forward(5.8795424);
right(117.875206);
forward(5.7754683);
right(1.2493645);
forward(5.5581164);
left(115.49045);
forward(6.1625853);
right(122.9707);
forward(6.209);
left(105.06805);
forward(5.3679056);
right(11.537125);
forward(5.5966363);
right(99.562126);
forward(4.5691175);
right(68.34905);
forward(5.9438157);
left(0.60176694);
forward(5.830969);
right(57.704304);
forward(5.4363017);
left(109.10307);
forward(5.4110694);
right(0.13413125);
forward(13.516692);
left(112.337456);
forward(6.0466065);
left(16.088762);
forward(5.73623);
left(1.139699);
forward(5.9580965);
left(6.881702);
forward(5.958447);
left(1.8073294);
forward(5.9815836);
left(3.7146869);
forward(6.054486);
left(88.59083);
forward(10.871938);
right(84.780075);
forward(5.6865606);
left(31.365162);
forward(5.7552733);
left(31.555582);
forward(5.6417074);
left(48.987724);
forward(6.44451);
left(64.324554);
forward(8.658194);
left(8.863324);
forward(6.1424);
right(137.26843);
forward(9.084941);
left(139.7652);
forward(5.2306046);
left(6.6931105);
forward(5.3341966);
right(117.25993);
forward(7.111851);
right(15.111137);
forward(6.4122286);
right(123.48349);
forward(5.6580224);
left(56.713715);
forward(5.3457685);
left(65.99914);
forward(5.1866302);
left(93.596725);
forward(5.216762);
right(27.471388);
forward(5.6169496);
right(100.05874);
forward(5.886646);
left(118.757286);
forward(6.6659994);
right(110.58846);
forward(4.3714914);
left(39.930077);
forward(4.769032);
right(70.69008);
forward(5.5662394);
left(125.580345);
forward(6.0154977);
right(118.09481);
forward(5.490062);
left(70.91157);
forward(5.7138596);
right(124.85438);
forward(6.1318994);
right(59.937893);
forward(5.977378);
right(5.2571197);
forward(6.0570745);
right(56.814095);
forward(5.6245947);
left(113.10261);
forward(5.706138);
right(66.81182);
forward(5.732309);
left(65.18533);
forward(15.917995);
left(111.773);
forward(4.8719664);
left(13.3034315);
forward(5.1881385);
left(4.333331);
forward(5.065175);
right(14.347057);
forward(5.2382026);
left(14.392437);
forward(5.164032);
right(2.7870312);
forward(4.4986444);
right(6.602115);
forward(4.6612973);
right(11.361459);
forward(4.9713464);
left(101.95723);
forward(5.096663);
right(15.427279);
forward(7.5364227);
left(59.745155);
forward(5.6589046);
right(123.16784);
forward(5.7539);
left(61.460854);
forward(5.095881);
right(18.069798);
forward(5.08105);
right(31.805525);
forward(5.6071835);
right(118.517296);
forward(5.1978126);
left(19.290632);
forward(4.8190875);
right(4.743928);
forward(5.0410376);
left(107.92933);
forward(4.106481);
left(61.918873);
forward(5.5366926);
left(2.638174);
forward(5.065238);
right(1.1495275);
forward(5.3080893);
left(67.670364);
forward(5.624276);
right(66.502174);
forward(5.0241694);
right(110.73283);
forward(5.215561);
left(117.897804);
forward(5.6185074);
left(67.59886);
forward(4.858388);
right(110.25033);
forward(5.385374);
left(121.931175);
forward(4.4109554);
right(94.14563);
forward(4.9233136);
left(122.0005);
forward(4.2642884);
right(93.10528);
forward(5.3793178);
right(61.67987);
forward(12.062951);
left(116.86032);
forward(7.3299737);
left(5.9480085);
forward(6.705519);
right(119.359505);
forward(6.4101562);
right(65.47077);
forward(7.623705);
right(37.983402);
forward(11.938382);
left(5.087029);
forward(6.4103317);
right(14.4535265);
forward(6.1550574);
left(27.559797);
forward(6.2286053);
right(103.95561);
forward(5.0536313);
left(60.86291);
forward(6.0148144);
right(11.689096);
forward(5.885839);
left(147.66136);
forward(10.546649);
right(142.53891);
forward(6.1465025);
left(39.44096);
forward(7.406121);
right(124.675316);
forward(6.251045);
left(13.719695);
forward(6.3224707);
left(57.623215);
forward(6.118902);
left(118.014404);
forward(5.9299603);
right(0.72374046);
forward(5.7182093);
right(116.21422);
forward(6.3289204);
right(65.193954);
forward(5.9953823);
right(1.2757922);
forward(6.0229607);
left(149.22845);
forward(10.414671);
left(26.83103);
forward(6.1685925);
left(55.57806);
forward(5.417431);
right(151.48872);
forward(9.703937);
right(82.50069);
forward(5.6396594);
left(121.44748);
forward(6.2146945);
right(120.32281);
forward(5.949763);
left(53.308075);
forward(5.590028);
right(144.97067);
forward(9.958315);
left(28.387392);
forward(5.8940353);
left(63.510067);
forward(6.126909);
right(15.563393);
forward(11.026051);
left(60.750717);
forward(5.1216903);
right(29.743519);
forward(5.193594);
right(27.12396);
forward(4.9911194);
left(68.3173);
forward(15.865208);
right(73.81403);
forward(5.399734);
left(179.48929);
forward(9.67031);
left(29.259901);
forward(5.1291237);
right(10.846025);
forward(5.60261);
left(12.613883);
forward(5.641958);
left(16.413572);
forward(6.28174);
left(24.435486);
forward(6.181162);
right(116.23973);
forward(5.8776026);
left(118.36944);
forward(6.202563);
right(117.26918);
forward(5.786607);
right(59.67254);
forward(6.018655);
right(57.906395);
forward(5.863867);
left(71.18825);
forward(6.624176);
left(45.916203);
forward(5.8051467);
left(129.70312);
forward(6.5002337);
right(63.040783);
forward(5.60448);
right(60.71314);
forward(5.6434345);
right(45.688232);
forward(5.2888355);
right(120.1763);
forward(6.128478);
left(118.13746);
forward(6.1092496);
left(75.59012);
forward(6.921508);
right(46.308693);
forward(5.806045);
right(72.77742);
forward(5.893977);
left(121.01641);
forward(5.3393784);
right(103.71624);
forward(5.4862537);
right(18.247843);
forward(6.2200203);
right(122.1245);
forward(5.8365655);
left(12.157128);
forward(6.0068326);
right(57.726707);
forward(5.8295918);
left(120.45254);
forward(5.8571944);
right(46.395794);
forward(5.4489384);
left(14.205635);
forward(5.707277);
right(28.10995);
forward(5.9652023);
right(32.02364);
forward(5.653467);
left(129.85544);
forward(6.8801937);
left(74.263405);
forward(6.1844177);
right(108.984955);
forward(5.5027766);
right(62.351906);
forward(5.000693);
left(84.023094);
forward(5.5425444);
left(90.27331);
forward(5.4347677);
right(29.173395);
forward(10.368333);
right(37.30702);
forward(6.3273683);
right(70.53637);
forward(12.804712);
left(12.229861);
forward(5.7199097);
left(85.287895);
forward(10.584006);
left(98.672035);
forward(6.516626);
left(26.510885);
forward(6.727048);
right(112.35726);
forward(5.6691313);
left(75.103584);
forward(6.032224);
right(5.705052);
forward(5.9901214);
left(6.8527284);
forward(6.0963783);
left(92.606026);
forward(8.041496);
left(55.00675);
forward(6.472495);
right(78.46194);
forward(5.9011855);
right(87.92483);
forward(5.418638);
right(27.696949);
forward(5.6223474);
right(41.595993);
forward(6.0190125);
left(8.968434);
forward(5.5262027);
left(105.647255);
forward(6.7287383);
right(0.51419026);
forward(17.02493);
left(45.28833);
forward(5.8402514);
right(26.17484);
forward(4.9697814);
left(46.67413);
forward(5.232281);
left(8.400245);
forward(6.2513037);
right(27.94541);
forward(5.635752);
left(13.690929);
forward(5.811293);
left(54.995903);
forward(9.211624);
left(26.800665);
forward(5.3226857);
right(6.0772133);
forward(5.374704);
right(88.92473);
forward(5.372361);
right(32.536724);
forward(6.0079026);
right(68.401115);
forward(5.3322988);
right(29.02493);
forward(5.656292);
right(18.995287);
forward(5.8902698);
left(43.811207);
forward(9.559207);
right(23.655827);
forward(6.623519);
right(0.62126714);
forward(6.4018803);
right(3.5115912);
forward(6.5639668);
right(17.649359);
forward(6.654612);
right(7.339741);
forward(6.5771775);
right(27.551174);
forward(6.5849714);
right(48.81814);
forward(6.690837);
right(14.5668955);
forward(6.824181);
right(62.884907);
forward(6.8128405);
left(116.03092);
forward(5.3825865);
left(51.625217);
forward(5.8077717);
left(45.029575);
forward(6.1719785);
right(61.382763);
forward(6.5213695);
right(123.94555);
forward(6.48732);
left(108.673645);
forward(5.6816816);
left(57.338272);
forward(5.379867);
right(40.537525);
forward(5.8812833);
right(125.222046);
forward(7.058603);
left(74.630165);
forward(5.6022887);
right(16.260784);
forward(5.570005);
right(45.000637);
forward(5.2568417);
left(96.69725);
forward(5.180418);
left(72.936554);
forward(5.0399833);
left(47.857113);
forward(6.679496);
left(9.154366);
forward(6.2098594);
right(137.01268);
forward(10.276122);
right(85.96384);
forward(4.832989);
left(44.70748);
forward(5.482308);
right(0.72210807);
forward(5.378182);
right(114.53941);
forward(6.23829);
left(121.647354);
forward(5.440945);
right(6.8383784);
forward(5.549268);
left(116.27596);
forward(5.655902);
left(6.0512333);
forward(5.852658);
right(56.07796);
forward(5.248498);
right(117.387436);
forward(6.303638);
left(127.28982);
forward(6.181456);
left(53.444477);
forward(5.0601892);
left(36.45466);
forward(4.9677596);
left(7.1625457);
forward(5.3957524);
left(66.316315);
forward(6.256493);
left(117.395485);
forward(5.7260776);
right(110.457115);
forward(5.752499);
right(65.59396);
forward(5.5840936);
right(35.436195);
forward(5.6185513);
right(77.387634);
forward(5.312374);
right(10.180752);
forward(5.3966217);
right(5.906358);
forward(5.81887);
right(64.78931);
forward(5.8073378);
left(117.45756);
forward(5.771274);
right(59.432415);
forward(5.6754966);
left(0.098914795);
forward(5.532275);
right(3.9167616);
forward(5.900966);
left(0.118920416);
forward(5.8654466);
right(12.347892);
forward(5.8093266);
right(50.043797);
forward(5.385294);
left(116.253746);
forward(5.7622805);
right(62.534874);
forward(6.0662117);
right(1.9071662);
forward(6.166219);
right(2.7968497);
forward(5.8525486);
right(1.439954);
forward(6.245525);
right(27.457956);
forward(6.455853);
right(8.896583);
forward(5.8059397);
right(53.285126);
forward(5.049199);
right(107.18913);
forward(5.5883017);
right(30.504416);
forward(5.452867);
left(34.809345);
forward(5.0891786);
left(123.82529);
forward(6.658109);
right(128.99962);
forward(5.360012);
right(35.803356);
forward(5.2424393);
left(51.514103);
forward(5.2823176);
left(59.213043);
forward(4.7597547);
left(103.73442);
forward(5.3937817);
right(18.361635);
forward(5.3023024);
right(58.192);
forward(4.904917);
left(119.50758);
forward(5.7291813);
right(77.92428);
forward(5.526952);
left(121.10205);
forward(6.0305095);
right(72.61066);
forward(5.4036045);
left(1.9228688);
forward(5.8041677);
left(69.69354);
forward(5.667646);
right(122.99902);
forward(6.7814755);
right(17.356161);
forward(6.8347635);
left(2.507253);
forward(5.6259646);
right(88.13365);
forward(4.501638);
left(113.861984);
forward(6.166751);
right(108.04426);
forward(5.495898);
right(74.1947);
forward(5.113532);
left(32.06667);
forward(4.51398);
right(58.60944);
forward(5.860221);
right(108.89495);
forward(5.817145);
left(75.35887);
forward(5.7074933);
left(108.93356);
forward(5.431975);
right(6.669816);
forward(5.5570135);
left(71.00315);
forward(5.331772);
left(47.978874);
forward(5.9047713);
right(121.55889);
forward(5.125424);
right(42.98686);
forward(4.959216);
right(0.18504347);
forward(4.9031887);
left(58.79757);
forward(5.926088);
left(116.92056);
forward(5.7208247);
right(86.274864);
forward(5.3857827);
right(94.912796);
forward(4.8773694);
right(12.01366);
forward(5.1501555);
right(55.209633);
forward(6.3180647);
left(84.10946);
forward(5.424774);
right(26.829008);
forward(8.982441);
left(141.12917);
forward(5.58776);
right(27.717247);
forward(8.92109);
left(147.97948);
forward(5.2364397);
right(40.752136);
forward(5.1107807);
right(113.43141);
forward(5.4002466);
right(34.281113);
forward(5.2835293);
right(29.032866);
forward(5.472194);
left(6.7520514);
forward(5.203567);
right(120.2273);
forward(6.7153597);
right(22.899055);
forward(5.8220515);
left(115.11958);
forward(5.6329174);
left(50.3189);
forward(5.227324);
left(66.29927);
forward(5.225313);
right(111.98841);
forward(5.469061);
left(64.78099);
forward(5.5889254);
right(9.015801);
forward(5.2643595);
left(60.744114);
forward(5.358176);
left(45.079445);
forward(5.921091);
left(119.797676);
forward(5.78306);
right(30.532364);
forward(5.555509);
right(112.43913);
forward(5.817154);
right(48.70917);
forward(5.0819564);
right(3.1945407);
forward(5.438796);
right(2.7576888);
forward(5.81734);
left(45.536568);
forward(4.898014);
right(77.18697);
forward(5.1794844);
left(71.25729);
forward(5.783837);
left(50.63834);
forward(5.493291);
left(118.818275);
forward(5.5692425);
right(37.78462);
forward(6.5841765);
right(128.03387);
forward(4.992774);
right(13.817741);
forward(4.932733);
right(13.365102);
forward(4.9980974);
left(52.3547);
forward(5.146035);
left(114.58998);
forward(5.9964814);
left(25.002869);
forward(5.9705486);
right(113.774666);
forward(5.22706);
right(55.3874);
forward(5.373675);
right(48.4098);
forward(4.74633);
left(8.916675);
forward(5.3285985);
left(125.7942);
forward(6.151532);
right(70.09529);
forward(5.2877903);
left(105.77957);
forward(4.9888425);
left(70.55178);
forward(6.0294867);
right(69.336105);
forward(5.808074);
left(106.10939);
forward(5.044515);
right(111.17843);
forward(5.5639396);
left(116.76361);
forward(5.459638);
right(0.9139339);
forward(5.515848);
left(2.9093053);
forward(5.4174438);
right(19.551088);
forward(9.400877);
right(84.63765);
forward(5.5027947);
left(12.010587);
forward(5.0949993);
left(0.68386585);
forward(5.34395);
right(67.34749);
forward(5.6290526);
right(44.72933);
forward(5.735859);
right(69.97248);
forward(5.0897765);
right(106.94608);
forward(5.4726257);
left(116.777214);
forward(5.6185355);
right(25.54289);
forward(5.660579);
left(115.554474);
forward(5.6714234);
left(47.165203);
forward(5.448558);
right(114.08346);
forward(5.430095);
left(60.08868);
forward(5.483854);
right(4.5670614);
forward(5.6427355);
left(57.113663);
forward(5.4904733);
left(119.97453);
forward(5.9227557);
left(1.4191083);
forward(5.8500695);
right(59.725834);
forward(5.8903294);
right(18.806316);
forward(6.0727134);
left(57.632908);
forward(5.566766);
right(111.02944);
forward(5.3996477);
right(65.23612);
forward(5.497448);
left(11.648229);
forward(5.409495);
right(121.69697);
forward(6.209861);
left(57.984756);
forward(5.4594464);
left(67.634865);
forward(6.02177);
left(117.738945);
forward(5.4313912);
right(62.78047);
forward(5.7731085);
right(116.61128);
forward(5.3595753);
left(0.12496513);
forward(5.465758);
left(0.3263396);
forward(5.5208488);
right(58.632397);
forward(5.542314);
left(0.7981622);
forward(5.417119);
left(63.17344);
forward(5.3523808);
right(46.722664);
forward(5.006706);
left(69.29313);
forward(5.2795396);
left(108.85936);
forward(6.3467);
right(72.88509);
forward(6.345287);
left(3.1906903);
forward(5.6518517);
left(61.04206);
forward(5.3391747);
left(113.650475);
forward(5.326176);
left(6.469391);
forward(5.6101537);
right(16.29888);
forward(5.3575687);
right(108.601204);
forward(5.375431);
right(65.75126);
forward(5.3092723);
left(69.010735);
forward(5.6622095);
left(37.53289);
forward(5.8502865);
left(132.99496);
forward(6.564215);
right(119.22731);
forward(5.251289);
left(2.8265302);
forward(5.595668);
right(118.82273);
forward(5.1271763);
left(26.183607);
forward(5.042189);
right(65.05302);
forward(5.6110153);
left(121.270645);
forward(5.8732414);
left(2.8348835);
forward(5.6306424);
left(54.572567);
forward(5.75246);
right(3.0126188);
forward(5.8734574);
left(69.47747);
forward(5.5965767);
right(9.522649);
forward(6.040337);
left(151.4121);
forward(10.128618);
right(30.3103);
forward(5.5477786);
right(115.107025);
forward(6.124439);
right(71.70078);
forward(5.7721725);
left(115.0933);
forward(5.705648);
right(118.64303);
forward(5.2320914);
left(31.101934);
forward(5.3440833);
right(78.54686);
forward(5.4550037);
right(58.69497);
forward(6.887736);
left(9.06387);
forward(5.6950464);
right(3.1167467);
forward(5.6592894);
right(70.06043);
forward(6.3199077);
left(117.22163);
forward(5.566564);
right(5.1406665);
forward(5.79682);
right(113.44214);
forward(5.6935043);
right(63.46647);
forward(5.601938);
left(67.68799);
forward(5.714199);
left(112.00832);
forward(5.2521663);
right(114.31676);
forward(6.483531);
right(75.43699);
forward(5.0059156);
right(45.67414);
forward(5.779523);
right(56.66349);
forward(5.756262);
left(153.09325);
forward(9.941158);
right(30.80556);
forward(5.6352296);
left(61.979874);
forward(5.793207);
left(117.47419);
forward(5.7215123);
right(0.6634777);
forward(5.521703);
right(110.898384);
forward(5.3982253);
left(108.17192);
forward(6.402365);
right(124.59807);
forward(6.021763);
right(8.820359);
forward(6.1134515);
right(111.77145);
forward(5.1548133);
left(7.8198833);
forward(5.4074583);
left(61.772472);
forward(5.9598365);
right(61.822308);
forward(5.660104);
right(58.966576);
forward(5.673038);
left(64.288055);
forward(5.58916);
left(115.394424);
forward(5.219356);
right(102.105965);
forward(6.187461);
left(126.99233);
forward(5.169462);
right(68.1135);
forward(8.888775);
left(146.71828);
forward(5.329237);
right(46.661278);
forward(5.3402567);
left(114.551994);
forward(5.613037);
right(112.77304);
forward(5.349479);
right(0.76687056);
forward(5.554012);
left(65.16552);
forward(5.7307835);
right(68.51942);
forward(5.249099);
right(3.3345127);
forward(5.1108513);
right(95.12198);
forward(5.5753374);
right(86.712524);
forward(5.901204);
left(63.104347);
forward(6.0809135);
right(55.45325);
forward(5.512669);
left(113.04269);
forward(5.5040584);
left(94.40913);
forward(9.941044);
right(37.401096);
forward(5.301351);
right(63.838074);
forward(6.199439);
right(117.599434);
forward(5.1847677);
left(1.0947427);
forward(5.2766595);
left(68.08427);
forward(5.6554303);
left(109.532196);
forward(5.2542377);
left(0.4701752);
forward(5.2712855);
right(109.85609);
forward(5.6628203);
right(67.78835);
forward(5.2793617);
right(9.457325);
forward(4.9053364);
left(27.98342);
forward(4.9136786);
right(55.393543);
forward(5.890898);
right(122.12092);
forward(5.8493385);
left(105.16712);
forward(5.2503963);
left(63.871254);
forward(5.201196);
left(47.721558);
forward(5.378362);
right(61.7363);
forward(5.776546);
left(3.7087924);
forward(5.36955);
left(30.88532);
forward(4.75091);
right(83.122604);
forward(4.842031);
left(125.23908);
forward(6.087016);
right(56.64569);
forward(4.8036475);
left(36.048275);
forward(4.6524634);
right(35.38479);
forward(5.3066444);
right(51.508064);
forward(4.998138);
left(81.71318);
forward(21.840307);
left(92.92465);
forward(8.971217);
right(14.683841);
forward(8.234515);
right(31.956718);
forward(6.2951827);
left(13.902078);
forward(6.1807127);
left(136.63083);
forward(8.833021);
right(36.249588);
forward(7.603514);
left(18.465221);
forward(8.2216215);
right(10.883387);
forward(8.7205925);
right(135.61958);
forward(21.432371);
right(80.7842);
forward(5.96866);
right(42.456646);
forward(5.832642);
left(111.91802);
forward(6.2465353);
left(65.91471);
forward(13.490636);
left(55.581234);
forward(5.7547626);
left(2.3865576);
forward(14.005077);
left(142.76166);
forward(5.4800663);
right(0.6159738);
forward(6.5664663);
right(76.91934);
forward(4.7687736);
right(44.61697);
forward(5.265497);
right(79.20829);
forward(4.1585474);
left(105.3452);
forward(5.7914467);
right(100.01342);
forward(4.6053553);
left(94.58791);
forward(5.0498314);
right(100.888596);
forward(6.1293716);
right(58.673233);
forward(4.9165316);
left(104.21135);
forward(6.13129);
right(92.043846);
forward(5.1376863);
right(41.155228);
forward(5.683337);
right(119.71911);
forward(4.8647637);
left(64.92931);
forward(5.4416556);
left(111.29954);
forward(5.4826446);
right(66.21624);
forward(5.648229);
left(59.71253);
forward(9.288887);
right(47.440033);
forward(5.7060347);
right(11.32713);
forward(5.687132);
right(37.713337);
forward(5.8320403);
left(79.95452);
forward(14.915812);
left(109.34841);
forward(5.3250923);
left(44.21852);
forward(14.77072);
right(14.257439);
forward(5.690154);
left(6.003845);
forward(5.2051435);
right(113.34191);
forward(6.3103642);
right(76.80225);
forward(5.7871065);
left(116.224815);
forward(5.847387);
left(46.876106);
forward(5.3435173);
right(115.59204);
forward(6.3403387);
left(25.615995);
forward(6.1129603);
left(113.413414);
forward(5.961082);
right(114.78078);
forward(6.0303717);
left(112.17259);
forward(5.8752728);
left(64.29561);
forward(5.771832);
left(54.92132);
forward(6.011765);
right(36.53848);
forward(9.246246);
right(3.6988068);
forward(5.0993323);
right(111.89382);
forward(5.910851);
right(82.93502);
forward(6.665953);
left(48.693863);
forward(5.5652213);
left(69.63336);
forward(5.996952);
left(110.912994);
forward(5.630859);
right(51.660507);
forward(5.6306815);
right(58.046345);
forward(5.462392);
right(109.107704);
forward(5.9731865);
left(124.076256);
forward(6.5790563);
left(66.06806);
forward(5.7286267);
right(63.428898);
forward(6.381577);
right(65.58062);
forward(6.264995);
right(135.0647);
forward(6.0911493);
left(111.866356);
forward(4.2351418);
right(25.754375);
forward(4.0418944);
right(81.19409);
forward(6.210456);
left(26.891512);
forward(5.5764747);
left(13.192516);
forward(5.9106884);
right(43.723698);
forward(5.3563323);
left(148.06694);
forward(10.154611);
left(12.444005);
forward(5.5412035);
left(47.651627);
forward(10.288684);
left(38.68247);
forward(5.8347077);
left(10.885538);
forward(5.9206953);
right(38.4666);
forward(5.509151);
left(45.206097);
forward(5.4150987);
left(59.484386);
forward(6.3080997);
right(106.300766);
forward(5.1048);
left(82.13746);
forward(16.396477);
left(44.825684);
forward(6.427683);
right(71.78458);
forward(6.2428317);
right(130.4376);
forward(5.4541254);
right(7.8642077);
forward(20.934126);
right(31.09793);
forward(5.0301895);
left(145.49156);
forward(8.913369);
right(13.97346);
forward(5.4107785);
left(3.4570181);
forward(5.640157);
left(17.717646);
forward(5.5978127);
left(13.855311);
forward(5.5212407);
left(34.682648);
forward(6.125834);
left(19.270285);
forward(7.2064962);
right(67.72578);
forward(5.5932217);
right(119.7341);
forward(6.4476748);
left(7.3384266);
forward(6.7834935);
right(13.612178);
forward(5.608515);
right(30.904684);
forward(5.4178367);
right(17.599163);
forward(5.4330845);
right(11.321871);
forward(5.304384);
right(18.676523);
forward(5.4114637);
left(5.3051443);
forward(5.5688863);
right(18.159819);
forward(4.895836);
left(124.84605);
forward(8.237675);
right(29.387175);
forward(6.9343147);
right(49.21837);
forward(6.778683);
right(33.58862);
forward(6.64846);
right(0.528199);
forward(6.925617);
right(16.52944);
forward(6.6671114);
right(8.839008);
forward(6.6017895);
right(6.6688395);
forward(6.549494);
right(18.144178);
forward(6.8003664);
left(49.863457);
forward(6.912085);
right(29.943882);
forward(5.874692);
right(5.30595);
forward(5.6874423);
right(72.674);
forward(5.8707523);
right(54.433743);
forward(5.805935);
left(106.604164);
forward(5.7024746);
left(69.2726);
forward(5.671392);
left(43.758705);
forward(6.464557);
right(123.423386);
forward(5.5712523);
left(103.55819);
forward(5.6647015);
right(35.210308);
forward(6.166154);
right(100.1356);
forward(6.138129);
right(70.60065);
forward(5.7369385);
left(5.1452494);
forward(6.5746875);
left(116.562775);
forward(5.762025);
left(58.202435);
forward(6.1827073);
right(4.867869);
forward(6.183953);
left(56.33899);
forward(5.636022);
right(49.509216);
forward(6.24466);
right(118.81004);
forward(6.240744);
left(109.67975);
forward(6.6782503);
right(16.207642);
forward(6.4574003);
right(24.86466);
forward(6.965837);
right(17.784883);
forward(5.4981403);
left(24.587738);
forward(5.8472056);
right(14.636439);
forward(5.745715);
right(10.959379);
forward(5.367429);
right(18.920729);
forward(5.7852135);
left(103.83323);
forward(6.4998255);
right(118.23027);
forward(6.5620017);
left(85.93317);
forward(6.6602445);
right(55.03171);
forward(5.9116807);
right(125.28219);
forward(6.292967);
right(9.597727);
forward(9.480142);
left(150.6992);
forward(4.938695);
right(45.668335);
forward(9.186413);
left(149.49327);
forward(5.2651343);
right(53.46205);
forward(5.706942);
right(19.953918);
forward(5.8136597);
right(127.457085);
forward(10.785506);
left(98.8651);
forward(6.394049);
right(0.051950417);
forward(6.577374);
right(7.862681);
forward(7.2892995);
right(33.933212);
forward(5.9730587);
right(50.919415);
forward(7.887041);
right(14.044425);
forward(7.163415);
right(0.51816547);
forward(6.6410365);
right(119.17155);
forward(6.6695886);
left(118.66836);
forward(6.3041444);
right(7.9402995);
forward(6.0795436);
right(109.406105);
forward(6.437813);
right(67.457146);
forward(6.2434306);
left(2.1314013);
forward(6.322218);
right(2.2175028);
forward(6.216566);
right(112.98434);
forward(6.2428656);
left(117.49494);
forward(6.5427203);
left(64.23421);
forward(5.667915);
left(47.272522);
forward(6.23354);
right(0.21059863);
forward(6.215088);
left(120.516426);
forward(6.575481);
right(117.57858);
forward(6.303755);
left(119.529915);
forward(6.54555);
right(59.308483);
forward(6.378031);
right(118.49114);
forward(6.6626596);
right(5.8141785);
forward(6.5866504);
right(59.33374);
forward(6.449307);
left(119.03964);
forward(6.558792);
right(60.99765);
forward(6.873787);
left(102.24402);
forward(10.088506);
right(100.973495);
forward(6.114375);
left(33.045784);
forward(11.806662);
right(175.42496);
forward(5.542843);
right(54.93671);
forward(11.215591);
left(64.51455);
forward(10.600529);
right(46.7354);
forward(6.7101703);
left(3.0596514);
forward(8.334241);
left(3.3956692);
forward(7.8335295);
right(0.14720424);
forward(6.993435);
left(3.0749373);
forward(6.7407413);
right(55.79871);
forward(5.1297917);
left(98.31551);
forward(5.2358966);
left(70.67096);
forward(10.398365);
right(9.782066);
forward(5.8798833);
right(71.63812);
forward(6.447114);
left(59.551952);
forward(7.973636);
right(126.47499);
forward(6.012529);
right(0.9628244);
forward(5.766775);




penup();
  done();      // releases stepper motor
  while(1);    // wait for reset
}


// ----- HELPER FUNCTIONS -----------
int step(float distance){
  int steps = distance * steps_rev / (wheel_dia * 3.1412);
  return steps;  
}

void left_rotationNTimes(int rotationNumber){
  int steps = rotationNumber * steps_rev;
  for(int step=0; step<steps; step++){
    for(int mask=0; mask<8; mask++){
      for(int pin=0; pin<4; pin++){
        digitalWrite(L_stepper_pins[pin], fwd_mask[mask][pin]);
      }
      delay(delay_time);
    } 
  }
}

void right_rotationNTimes(int rotationNumber){
  int steps = rotationNumber * steps_rev;
  for(int step=0; step<steps; step++){
    for(int mask=0; mask<8; mask++){
      for(int pin=0; pin<4; pin++){
        digitalWrite(R_stepper_pins[pin], fwd_mask[mask][pin]);
      }
      delay(delay_time);
    } 
  }
}

void forward(float distance){
  int steps = step(distance);
  for(int step=0; step<steps; step++){
    for(int mask=0; mask<8; mask++){
      for(int pin=0; pin<4; pin++){
          digitalWrite(L_stepper_pins[pin], rev_mask[mask][pin]);
          digitalWrite(R_stepper_pins[pin], fwd_mask[mask][pin]);
      }
      delay(delay_time);
    } 
  }   
}

void backward(float distance){
  int steps = step(distance);
  for(int step=0; step<steps; step++){
    for(int mask=0; mask<8; mask++){
      for(int pin=0; pin<4; pin++){
        digitalWrite(L_stepper_pins[pin], fwd_mask[mask][pin]);
        digitalWrite(R_stepper_pins[pin], rev_mask[mask][pin]);
      }
      delay(delay_time);
    } 
  }   
}


void right(float degrees){
  float rotation = degrees / 360.0;
  float distance = wheel_base * 3.1412 * rotation;
  int steps = step(distance);
  for(int step=0; step<steps; step++){
    for(int mask=0; mask<8; mask++){
      for(int pin=0; pin<4; pin++){
        digitalWrite(L_stepper_pins[pin], rev_mask[mask][pin]);
        digitalWrite(R_stepper_pins[pin], rev_mask[mask][pin]);
      }
      delay(delay_time);
    } 
  }   
}


void left(float degrees){
  float rotation = degrees / 360.0;
  float distance = wheel_base * 3.1412 * rotation;
  int steps = step(distance);
  for(int step=0; step<steps; step++){
    for(int mask=0; mask<8; mask++){
      for(int pin=0; pin<4; pin++){
        digitalWrite(L_stepper_pins[pin], fwd_mask[mask][pin]);
        digitalWrite(R_stepper_pins[pin], fwd_mask[mask][pin]);
      }
      delay(delay_time);
    } 
  }   
}


void done(){ // unlock stepper to save battery
  for(int mask=0; mask<8; mask++){
    for(int pin=0; pin<4; pin++){
      digitalWrite(R_stepper_pins[pin], LOW);
      digitalWrite(L_stepper_pins[pin], LOW);
    }
    delay(delay_time);
  }
}


void penup(){
  delay(250);
  Serial.println("PEN_UP()");
  penServo.write(PEN_UP);
  delay(250);
}


void pendown(){
  delay(250);  
  Serial.println("PEN_DOWN()");
  penServo.write(PEN_DOWN);
  delay(250);
}
